{"ast":null,"code":"var _jsxFileName = \"/Users/natnaelganoro/Documents/TechProjects/React/Section21-Routing/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  /** being replaced by loader in app.js */\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n\n  /** moved to loader funciton in app.js */\n  // const response = await fetch('http://localhost:8080/events');\n\n  // if (!response.ok) {\n  //   setError('Fetching events failed.');\n  // } else {\n  //   const resData = await response.json();\n  //   setFetchedEvents(resData.events);\n  // }\n  // setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n\n  /** - being replaced by defer\n   \n  if (data.isError){\n    return <p>{data.message}</p>\n  }\n  const events = data.events;\n   return (\n    <>\n      { {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />} }\n      <EventsList events={events} />\n    </>\n  );\n   */\n}\n_s(EventsPage, \"SfmtBwlvSuqumIK1IdATIlRr7qc=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}), {\n    //   status: 500,\n    // });\n    return json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n\n  /** - moved over to the loadEvents so it can be defered\n  \n    const response = await fetch('http://localhost:8080/events');\n  \n    if (!response.ok) {\n      // return { isError: true, message: 'Could not fetch events.' };\n      // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}), {\n      //   status: 500,\n      // });\n      return json(\n        { message: 'Could not fetch events.' },\n        { status: 500 });\n    } else {\n      return response;\n    }\n  \n  \n     */\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/natnaelganoro/Documents/TechProjects/React/Section21-Routing/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  /** being replaced by loader in app.js */\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n\n    /** moved to loader funciton in app.js */\n      // const response = await fetch('http://localhost:8080/events');\n\n      // if (!response.ok) {\n      //   setError('Fetching events failed.');\n      // } else {\n      //   const resData = await response.json();\n      //   setFetchedEvents(resData.events);\n      // }\n      // setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n\n  const { events} = useLoaderData();\n\n  return <Await resolve={events}></Await>\n\n  /** - being replaced by defer\n   \n  if (data.isError){\n    return <p>{data.message}</p>\n  }\n  const events = data.events;\n\n  return (\n    <>\n      { {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />} }\n      <EventsList events={events} />\n    </>\n  );\n\n  */\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}), {\n    //   status: 500,\n    // });\n    return json(\n      { message: 'Could not fetch events.' },\n      { status: 500 });\n  } else {\n    return response;\n  }\n}\n\nexport function loader() {\n\n  return defer({\n    events: loadEvents()\n  });\n\n/** - moved over to the loadEvents so it can be defered\n\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}), {\n    //   status: 500,\n    // });\n    return json(\n      { message: 'Could not fetch events.' },\n      { status: 500 });\n  } else {\n    return response;\n  }\n\n\n   */\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEE;EACE;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;;EAEA;EACA;;EAEA,MAAM;IAAEC;EAAM,CAAC,GAAGT,aAAa,CAAC,CAAC;EAEjC,oBAAOM,OAAA,CAACH,KAAK;IAACO,OAAO,EAAED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;;EAEvC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAACN,EAAA,CA5CQD,UAAU;EAAA,QAyBCP,aAAa;AAAA;AAAAe,EAAA,GAzBxBR,UAAU;AA8CnB,eAAeA,UAAU;AAEzB,eAAeS,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,OAAOlB,IAAI,CACT;MAAEmB,OAAO,EAAE;IAA0B,CAAC,EACtC;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpB,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EAEvB,OAAOpB,KAAK,CAAC;IACXO,MAAM,EAAEO,UAAU,CAAC;EACrB,CAAC,CAAC;;EAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}