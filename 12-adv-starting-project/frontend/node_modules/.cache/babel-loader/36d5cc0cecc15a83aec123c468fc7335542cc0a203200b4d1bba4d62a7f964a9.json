{"ast":null,"code":"var _jsxFileName = \"/Users/natnaelganoro/Documents/TechProjects/React/Section21-Routing/12-adv-starting-project/frontend/src/pages/Events.js\";\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  /** being replaced by loader in app.js */\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n\n  /** moved to loader funciton in app.js */\n  // const response = await fetch('http://localhost:8080/events');\n\n  // if (!response.ok) {\n  //   setError('Fetching events failed.');\n  // } else {\n  //   const resData = await response.json();\n  //   setFetchedEvents(resData.events);\n  // }\n  // setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","children","events","fetchedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natnaelganoro/Documents/TechProjects/React/Section21-Routing/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  /** being replaced by loader in app.js */\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n\n    /** moved to loader funciton in app.js */\n      // const response = await fetch('http://localhost:8080/events');\n\n      // if (!response.ok) {\n      //   setError('Fetching events failed.');\n      // } else {\n      //   const resData = await response.json();\n      //   setFetchedEvents(resData.events);\n      // }\n      // setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n  return (\n    <>\n      {/* {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />} */}\n      <EventsList events={fetchedEvents} />\n    </>\n  );\n}\n\nexport default EventsPage;"],"mappings":";AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EACpB;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEE;EACE;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;;EAEA;EACA;EACA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eAEEJ,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACrC,CAAC;AAEP;AAACC,EAAA,GA9BQR,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}